# postgres
alias poston="pg_ctl start -D /home/linuxbrew/.linuxbrew/var/postgres"
alias postoff="pg_ctl stop -D /home/linuxbrew/.linuxbrew/var/postgres"
# pass
alias pim="pass insert -m"
# open
alias open='xdg-open'
# alias cat to bat if installed
if hash bat 2>/dev/null; then
  alias cat="bat"
fi
if type nvim > /dev/null 2>&1; then
  alias vim='nvim'
fi
# Youtube Dl music extraction
mp3 () {
	youtube-dl --no-check-certificate --ignore-errors -f bestaudio --extract-audio --audio-format mp3 --audio-quality 0 -o '~/Music/youtube/%(title)s.%(ext)s' "$1"
}
# Playlist
mp3p () {
	youtube-dl --geo-bypass --no-check-certificate --yes-playlist --socket-timeout 60 --ignore-errors -f bestaudio --extract-audio --audio-format mp3 --audio-quality 0 -o '~/Music/youtube/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' "$1"
}

# PostGIS install
function getpostigs () {
    wget -q -P tmp/ https://github.com/postgis/postgis/archive/"$@".tar.gz
    tar xvzf tmp/"$@".tar.gz -C tmp/
    cd tmp/postgis-"$@"
    if [[ ! -a ./configure ]]; then
      ./autogen.sh
    fi
    eval ./configure `pg_config --configure`
    make
    make install
    cd ../..
    rm -rf tmp/
}

#Kitty terminal install
function getkitty() {
  mkdir .local/bin
  curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
  ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/
  cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications
  sed -i "s/Icon\=kitty/Icon\=\/home\/$USER\/.local\/kitty.app\/share\/icons\/hicolor\/256x256\/apps\/kitty.png/g" ~/.local/share/applications/kitty.desktop
  sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator ~/.local/bin/kitty 50
}

# Binary Systems Omniscent
alias bs_dbs='ruby utils/scripts/dumps_list.rb'

function cloc-git() {
  git clone --depth 1 "$1" temp-linecount-repo &&
    printf "('temp-linecount-repo' will be deleted automatically)\n\n\n" &&
    cloc temp-linecount-repo &&
    rm -rf temp-linecount-repo
}

